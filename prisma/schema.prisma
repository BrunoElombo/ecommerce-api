generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid())
  email       String    @unique
  username    String    @unique
  password    String
  firstName   String
  lastName    String
  phone       String?   @unique
  role        Role      @default(CUSTOMER)
  verified    DateTime?
  refreshToken String?  @unique
  addresses   Address[]
  reviews     Review[]
  orders      Order[]
  wishlist    Wishlist[]
  cartItem    CartItem[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  isActive    Boolean   @default(true)
}

model Blacklist{
  id    String    @id   @default(uuid())
  token String

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  isActive    Boolean   @default(true)
}

enum Role {
  CUSTOMER
  ADMIN
}

model Address {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  line1     String
  line2     String?
  city      String
  state     String
  postalCode String
  country   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isActive    Boolean   @default(true)
}

model Category {
  id          String    @id @default(uuid())
  name        String
  slug        String    @unique
  description String?
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  isActive    Boolean   @default(true)
}

model Product {
  id            String         @id @default(uuid())
  title         String
  slug          String?        @unique
  description   String?
  price         Decimal?       @db.Decimal(10, 2)
  stock         Int?           @default(0)
  categoryId    String
  category      Category       @relation(fields: [categoryId], references: [id])
  variations    ProductVariation[]
  reviews       Review[]
  wishLists     Wishlist[]
  cartItems     CartItem[]
  orderItem     OrderItem[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  isActive    Boolean   @default(true)
}

model ProductVariation {
  id          String   @id @default(uuid())
  productId   String
  product     Product  @relation(fields: [productId], references: [id])
  variation   VariationType
  value       String
  additionalPrice Decimal? @db.Decimal(10, 2)
  isActive    Boolean   @default(true)
}

model Review {
  id        String   @id @default(uuid())
  rating    Int
  comment   String?
  userId    String
  productId String
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  isActive    Boolean   @default(true)
}

model CartItem {
  id          String    @id @default(uuid())
  userId      String
  productId   String
  quantity    Int
  user        User      @relation(fields: [userId], references: [id])
  product     Product   @relation(fields: [productId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  isActive    Boolean   @default(true)
}

model Wishlist {
  id        String   @id @default(uuid())
  userId    String
  productId String
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  isActive    Boolean   @default(true)
}

model Order {
  id          String     @id @default(uuid())
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  totalAmount Decimal    @db.Decimal(10, 2)
  status      OrderStatus @default(PENDING)
  address     String
  orderItems  OrderItem[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  isActive    Boolean   @default(true)
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  COMPLETED
  CANCELLED
}

model OrderItem {
  id          String    @id @default(uuid())
  orderId     String
  productId   String
  quantity    Int
  price       Decimal    @db.Decimal(10, 2)
  order       Order      @relation(fields: [orderId], references: [id])
  product     Product    @relation(fields: [productId], references: [id])
  isActive    Boolean   @default(true)
}

model Coupon {
  id             String    @id @default(uuid())
  code           String    @unique
  discountType   DiscountType
  discountValue  Decimal    @db.Decimal(10,2)
  expiresAt      DateTime
  usageLimit     Int?
  usedCount      Int        @default(0)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  isActive    Boolean   @default(true)
}

enum DiscountType {
  FIXED
  PERCENTAGE
}

enum VariationType{
  COLOR
  SIZE
  MATERIAL
}